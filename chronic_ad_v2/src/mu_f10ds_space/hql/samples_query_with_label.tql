SELECT DISTINCT
       fab,
       module,
       design_id,
       ch_id,
       current_step,
       process_step,
       process_tool,
       process_position,
       parameter_name,
       lot_id,
       wafer_id,
       limit_enable,
       sample_date,
       sample_id,
       chart_type,
       value,
       ucl,
       lcl,
       COALESCE(col_type, '') AS col_type,
       channel_type,
       label,
        CASE
            WHEN value > ucl then 'H'
            WHEN value < lcl then 'L'
            ELSE 'N'
            END AS violation_type,
        query_session
FROM (
        SELECT
            {fab} as fab,
            channel_def.module as module,
            samples.design_id as design_id,
            CONCAT (samples_calc.ch_id, '_', samples_calc.ckc_id) as ch_id,
            samples.measurement_step as current_step,
            samples.process_step,
            samples.process_tool,
            samples.process_position,
            samples.parameter_name,
            samples.lot_id,
            samples.wafer_id,
            samples_calc.limit_enable,
            from_unixtime(unix_timestamp(samples_calc.sample_date)) as sample_date,
            samples_calc.sample_id,
            latest_ooc.chart_type as chart_type,
            CASE
                WHEN latest_ooc.chart_type = 'EWMA-Mean' THEN samples_calc.ext_ewma_mv
                WHEN latest_ooc.chart_type = 'Range' THEN (samples.ext_max - samples.ext_min)
                WHEN latest_ooc.chart_type =  'Sigma' THEN samples.ext_sigma
                WHEN latest_ooc.chart_type = 'Mean' THEN samples.ext_mv
            ELSE NULL
            END AS value,
            CASE
                WHEN latest_ooc.chart_type = 'EWMA-Mean' THEN samples_calc.ext_ewma_mv_ucl
                WHEN latest_ooc.chart_type =  'Sigma' THEN samples_calc.ext_sigma_ucl
                WHEN latest_ooc.chart_type = 'Range' THEN samples_calc.ext_range_ucl
                WHEN latest_ooc.chart_type = 'Mean' THEN samples_calc.ext_mv_ucl
                ELSE NULL
                END AS ucl,
            CASE
                WHEN latest_ooc.chart_type = 'EWMA-Mean' THEN samples_calc.ext_ewma_mv_lcl
                WHEN latest_ooc.chart_type = 'Range' THEN samples_calc.ext_range_lcl
                WHEN latest_ooc.chart_type =  'Sigma' THEN samples_calc.ext_sigma_lcl
                WHEN latest_ooc.chart_type = 'Mean' THEN samples_calc.ext_mv_lcl
                ELSE NULL
                END AS lcl,

            channel_def.col_type as col_type,
            channel_def.channel_type as channel_type,
            CASE WHEN samples_viol.val_type_id IS NULL THEN 0 ELSE 1 END AS label,
            '{end_date}' as query_session

        FROM (
            SELECT
                ch_id,
                ckc_id,
                sample_id,
                sample_date,
                ext_ewma_mv,
                ext_ewma_mv_ucl,
                ext_ewma_mv_lcl,
                ext_sigma_ucl,
                ext_sigma_lcl,
                ext_range_ucl,
                ext_range_lcl,
                ext_mv_ucl,
                ext_mv_lcl,
                limit_enable
            FROM
                prod_mti_{region}_fab_{fab}_spc_dm.samples_calc
            WHERE
                    sample_date >= '{start_date}'
                and sample_date <= '{end_date}'
                and {year_month_partition_str}
                {ch_ckc_condition_str}
            ) samples_calc

            INNER JOIN

            (select
                exval_01 as design_id, --DESIGN_ID
                exval_04 as measurement_step, --OOC STEP
                exval_06 as process_step, --PROCESS STEP
                exval_07 as process_tool, --PROCESS TOOL
                exval_11 as process_position, --PROCESS POSITION
                sample_id, --SAMPLE ID
                sample_date, --SAMPLE DATE
                exval_12 as lot_id, -- LOT ID
                daval_03 as wafer_id, -- WAFER ID
                parameter_name, -- PARAMETER
                ext_mv as ext_mv,
                ext_sigma as ext_sigma,
                ext_min as ext_min,
                ext_max as ext_max
            from prod_mti_{region}_fab_{fab}_spc_dm.t_ext_samples_wafer
            where
                    sample_date >= '{start_date}'
                and sample_date <= '{end_date}'
                and {year_month_partition_str}

            union all

            select
                exval_01 as design_id, --DESIGN_ID
                exval_04 as measurement_step, --OOC STEP
                exval_06 as process_step, --PROCESS STEP
                exval_07 as process_tool, --PROCESS TOOL
                exval_11 as process_position, --PROCESS POSITION
                sample_id, --SAMPLE ID
                sample_date, --SAMPLE DATE
                exval_12 as lot_id, -- LOT ID
                daval_03 as wafer_id, -- WAFER ID
                parameter_name, -- PARAMETER
                ext_mv as ext_mv,
                ext_sigma as ext_sigma,
                ext_min as ext_min,
                ext_max as ext_max
            from prod_mti_{region}_fab_{fab}_spc_dm.t_ext_samples_lot

            where
                    sample_date >= '{start_date}'
                and sample_date <= '{end_date}'
                and {year_month_partition_str}
            ) samples

            ON
            samples.sample_id = samples_calc.sample_id

            INNER JOIN

            (SELECT
                ch_id,
                max(struct(sys_tt_upd_ts, cf_value_09, cf_value_10, cf_value_11, ch_id)).sys_tt_upd_ts as max_date,
                max(struct(sys_tt_upd_ts, cf_value_09, cf_value_10, cf_value_11, ch_id)).cf_value_09 as col_type,
                max(struct(sys_tt_upd_ts, cf_value_09, cf_value_10, cf_value_11, ch_id)).cf_value_10 as channel_type,
                max(struct(sys_tt_upd_ts, cf_value_09, cf_value_10, cf_value_11, ch_id)).cf_value_11 as module
            FROM prod_mti_{region}_fab_{fab}_spc_dm.t_channel_def
            GROUP BY ch_id) channel_def
            ON
                samples_calc.ch_id = channel_def.ch_id

            INNER JOIN (
                SELECT ch_id,  ckc_id, chart_type FROM (
                    SELECT ch_id,  ckc_id, chart_type, count(sample_id) as ooc FROM
                        (
                        SELECT
                            ch_id,
                            ckc_id,
                            sample_id,
                            val_type_id,
                            sample_date,
                            CASE
                                WHEN val_type_id IN (3,4) THEN 'Mean'
                                WHEN val_type_id IN (11,12) THEN 'EWMA-Mean'
                                WHEN val_type_id IN (5,17) THEN 'Sigma'
                                WHEN val_type_id IN (6,18) THEN 'Range'
                                ELSE NULL END AS chart_type
                        FROM
                        prod_mti_{region}_fab_{fab}_spc_dm.T_EXT_SAMPLES_VIOL
                        WHERE
                            sample_date >= '{start_sample_date_latest_ooc}'
                        and sample_date <= '{end_date}'
                        and val_type_id in ({vio_type_list_csv})
                        and {year_month_partition_str}
                        {ch_ckc_condition_str}
                        )
                    GROUP BY ch_id,  ckc_id, chart_type)
                    WHERE ooc >= {latest_ooc_min_count}) latest_ooc
                ON
                    latest_ooc.ch_id = samples_calc.ch_id
--                 and latest_ooc.ckc_id = samples_calc.ckc_id


            LEFT JOIN
                    (
                    SELECT
                        ch_id,
                        ckc_id,
                        sample_id,
                        val_type_id,
                        CASE
                            WHEN val_type_id IN (3,4) THEN 'Mean'
                            WHEN val_type_id IN (11,12) THEN 'EWMA-Mean'
                            WHEN val_type_id IN (5,17) THEN 'Sigma'
                            WHEN val_type_id IN (6,18) THEN 'Range'
                            ELSE NULL END AS chart_type
                        FROM
                        prod_mti_{region}_fab_{fab}_spc_dm.T_EXT_SAMPLES_VIOL
                        WHERE
                            sample_date >= '{start_date}'
                        and sample_date <= '{end_date}'
                        and val_type_id in ({vio_type_list_csv})
                        and {year_month_partition_str}
                    ) samples_viol

            ON
                samples_viol.sample_id = samples_calc.sample_id
            AND samples_viol.ch_id = samples_calc.ch_id
--             AND samples_viol.ckc_id = samples_calc.ckc_id
            AND samples_viol.chart_type = latest_ooc.chart_type

            WHERE
            samples_calc.ch_id is not null
            and samples_calc.limit_enable is not null
            {area_condition_str}
) f

order by module desc, ch_id desc, sample_date asc